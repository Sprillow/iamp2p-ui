{"version":3,"sources":["webpack:///./node_modules/@holo-host/wasm-key-manager/wasm_key_manager.js","webpack:///./node_modules/blakejs/util.js","webpack:///./node_modules/base-x/src/index.js","webpack:///./node_modules/blakejs/index.js","webpack:///./node_modules/blakejs/blake2b.js","webpack:///./node_modules/blakejs/blake2s.js","webpack:///./node_modules/multihashes/src/index.js","webpack:///./node_modules/bs58/index.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/multihashes/src/constants.js","webpack:///./node_modules/varint/index.js","webpack:///./node_modules/varint/encode.js","webpack:///./node_modules/varint/decode.js","webpack:///./node_modules/varint/length.js","webpack:///./node_modules/json-stable-stringify/index.js","webpack:///./node_modules/jsonify/index.js","webpack:///./node_modules/jsonify/lib/parse.js","webpack:///./node_modules/jsonify/lib/stringify.js","webpack:///./node_modules/@holo-host/cryptolib/src/index.js"],"names":["cachegetUint8Memory","getUint8Memory","buffer","Uint8Array","WASM_VECTOR_LEN","passArray8ToWasm","arg","ptr","length","set","cachegetInt32Memory","getInt32Memory","Int32Array","getArrayU8FromWasm","len","subarray","cachedTextEncoder","TextEncoder","encodeString","encodeInto","view","buf","encode","read","written","passStringToWasm","mem","offset","code","charCodeAt","slice","deriveSeedFrom","hha_id","email","password","memi32","v0","retptr","from_hcs0","public_key_hcid","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm","decode","to_hcs0","public_key_bytes","heap","Array","getObject","idx","fill","undefined","push","heap_next","takeObject","ret","dropObject","addHeapObject","obj","KeyManager","Object","create","prototype","this","seed","__wrap","message","signature_bytes","__wbindgen_object_drop_ref","arg0","__wbg_new_b523d83e932ae6ee","arg1","Error","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","ret0","stack","ret1","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_throw","__wbindgen_rethrow","uint32ToHex","val","toString","substring","module","exports","normalizeInput","input","Buffer","ERROR_MSG_INPUT","from","toHex","bytes","map","call","n","join","debugPrint","label","arr","size","msg","i","toUpperCase","log","testSpeed","hashFn","N","M","startMs","Date","getTime","genMs","hashHex","hashMs","ms","Math","round","_Buffer","ALPHABET","TypeError","BASE_MAP","j","x","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","source","alloc","psz","zeroes","b256","carry","it3","it4","vch","allocUnsafe","isArray","isBuffer","pbegin","pend","b58","it1","it2","str","repeat","string","b2b","b2s","blake2b","blake2bHex","blake2bInit","blake2bUpdate","blake2bFinal","blake2s","blake2sHex","blake2sInit","blake2sUpdate","blake2sFinal","util","ADD64AA","v","a","b","o0","o1","ADD64AC","b0","b1","B2B_GET32","B2B_G","c","d","ix","iy","x0","m","x1","y0","y1","xor0","xor1","BLAKE2B_IV32","Uint32Array","SIGMA82","blake2bCompress","ctx","last","h","t","outlen","key","keylen","out","output","B2S_GET32","B2S_G","y","ROTR32","BLAKE2S_IV","SIGMA","blake2sCompress","bs58","cs","names","codes","defaultLengths","varint","validate","multihash","toHexString","hash","fromHexString","toB58String","fromB58String","encoded","isValidCode","name","digest","hashfn","coerceCode","concat","isAppCode","prefix","basex","copyProps","src","dst","SafeBuffer","encodingOrOffset","allocUnsafeSlow","encoding","SlowBuffer","freeze","0","encodingLength","num","oldOffset","INT","MSB","MSBALL","pow","res","shift","counter","l","RangeError","REST","N1","N2","N3","N4","N5","N6","N7","N8","N9","value","json","JSON","opts","cmp","space","f","cycles","replacer","node","aobj","bobj","seen","stringify","parent","level","indent","colonSeparator","toJSON","item","indexOf","keys","objectKeys","sort","keyValue","splice","has","hasOwnProperty","parse","at","ch","text","escapee","r","next","number","isFinite","hex","uffff","parseInt","String","fromCharCode","white","object","array","word","reviver","result","walk","holder","k","gap","rep","escapable","meta","quote","lastIndex","test","replace","partial","mind","apply","blake","SerializeJSON","base36","HOLO_HASH_AGENT_PREFIX","HOLO_HASH_HEADER_PREFIX","HOLO_HASH_ENTRY_PREFIX","HOLO_HASH_DNA_PREFIX","getHoloHashPrefix","holoHashType","holoHashPrefix","check_length","expectedLength","byteLength","calc_dht_bytes","data","dht_part","Codec","base64","HoloHash","decodeToHoloHash","holoHashStringFromB64","rawBase64","holoHashbase64","char","convert_b64_to_holohash_b64","holoHashFromBuffer","compareBuf","copy","toLowerCase","compare"],"mappings":"2FAAA,glBAEA,IAAIA,EAAsB,KAC1B,SAASC,IAIL,OAH4B,OAAxBD,GAAgCA,EAAoBE,SAAW,IAAYA,SAC3EF,EAAsB,IAAIG,WAAW,IAAYD,SAE9CF,EAGX,IAAII,EAAkB,EAEtB,SAASC,EAAiBC,GACtB,MAAMC,EAAM,IAAoC,EAAbD,EAAIE,QAGvC,OAFAP,IAAiBQ,IAAIH,EAAKC,EAAM,GAChCH,EAAkBE,EAAIE,OACfD,EAGX,IAAIG,EAAsB,KAC1B,SAASC,IAIL,OAH4B,OAAxBD,GAAgCA,EAAoBR,SAAW,IAAYA,SAC3EQ,EAAsB,IAAIE,WAAW,IAAYV,SAE9CQ,EAGX,SAASG,EAAmBN,EAAKO,GAC7B,OAAOb,IAAiBc,SAASR,EAAM,EAAGA,EAAM,EAAIO,GAGxD,IAAIE,EAAoB,IAAIC,YAAY,SAExC,MAAMC,EAAwD,mBAAjCF,EAAkBG,WACzC,SAAUb,EAAKc,GACjB,OAAOJ,EAAkBG,WAAWb,EAAKc,IAEvC,SAAUd,EAAKc,GACjB,MAAMC,EAAML,EAAkBM,OAAOhB,GAErC,OADAc,EAAKX,IAAIY,GACF,CACHE,KAAMjB,EAAIE,OACVgB,QAASH,EAAIb,SAIrB,SAASiB,EAAiBnB,GAEtB,IAAIQ,EAAMR,EAAIE,OACVD,EAAM,IAAuBO,GAEjC,MAAMY,EAAMzB,IAEZ,IAAI0B,EAAS,EAEb,KAAOA,EAASb,EAAKa,IAAU,CAC3B,MAAMC,EAAOtB,EAAIuB,WAAWF,GAC5B,GAAIC,EAAO,IAAM,MACjBF,EAAInB,EAAMoB,GAAUC,EAGxB,GAAID,IAAWb,EAAK,CACD,IAAXa,IACArB,EAAMA,EAAIwB,MAAMH,IAEpBpB,EAAM,IAAwBA,EAAKO,EAAKA,EAAMa,EAAsB,EAAbrB,EAAIE,QAC3D,MAAMY,EAAOnB,IAAiBc,SAASR,EAAMoB,EAAQpB,EAAMO,GAG3Da,GAFYT,EAAaZ,EAAKc,GAEhBI,QAIlB,OADApB,EAAkBuB,EACXpB,EAmBJ,SAASwB,EAAeC,EAAQC,EAAOC,GAE9B,IADG,EACyB7B,EAAiB2B,GAAS5B,EAAiBqB,EAAiBQ,GAAQ7B,EAAiBqB,EAAiBS,GAAW9B,GADzJ,MAEM+B,EAASxB,IACTyB,EAAKvB,EAAmBsB,EAAOE,GAAiBF,EAAOE,IAAiBP,QAE9E,OADA,IAAqBK,EAAOE,GAA0C,EAAzBF,EAAOE,IAC7CD,EAQJ,SAASE,EAAUC,GAEV,IADG,EACoBd,EAAiBc,GAAkBnC,GADtE,MAEM+B,EAASxB,IACTyB,EAAKvB,EAAmBsB,EAAOE,GAAiBF,EAAOE,IAAiBP,QAE9E,OADA,IAAqBK,EAAOE,GAA0C,EAAzBF,EAAOE,IAC7CD,EAGX,IAAII,EAAoB,IAAIC,YAAY,QAAS,CAAEC,WAAW,EAAMC,OAAO,IAI3E,SAASC,EAAkBrC,EAAKO,GAC5B,OAAO0B,EAAkBK,OAAO5C,IAAiBc,SAASR,EAAKA,EAAMO,IAOlE,SAASgC,EAAQC,GAER,IADG,EACkB1C,EAAiB0C,GAAmB3C,GADrE,MAEM+B,EAASxB,IACTyB,EAAKQ,EAAkBT,EAAOE,GAAiBF,EAAOE,IAAiBP,QAE7E,OADA,IAAqBK,EAAOE,GAA0C,EAAzBF,EAAOE,IAC7CD,EAhBXI,EAAkBK,SAmBlB,MAAMG,EAAO,IAAIC,MAAM,IAMvB,SAASC,EAAUC,GAAO,OAAOH,EAAKG,GAJtCH,EAAKI,UAAKC,GAEVL,EAAKM,UAAKD,EAAW,MAAM,GAAM,GAIjC,IAAIE,EAAYP,EAAKxC,OAQrB,SAASgD,EAAWL,GAChB,MAAMM,EAAMP,EAAUC,GAEtB,OATJ,SAAoBA,GACZA,EAAM,KACVH,EAAKG,GAAOI,EACZA,EAAYJ,GAKZO,CAAWP,GACJM,EAGX,SAASE,EAAcC,GACfL,IAAcP,EAAKxC,QAAQwC,EAAKM,KAAKN,EAAKxC,OAAS,GACvD,MAAM2C,EAAMI,EAIZ,OAHAA,EAAYP,EAAKG,GAEjBH,EAAKG,GAAOS,EACLT,EAIJ,MAAMU,EAET,cAActD,GACV,MAAMqD,EAAME,OAAOC,OAAOF,EAAWG,WAGrC,OAFAJ,EAAIrD,IAAMA,EAEHqD,EAGX,OACI,MAAMrD,EAAM0D,KAAK1D,IACjB0D,KAAK1D,IAAM,EAEX,IAA2BA,GAa/B,YAAY2D,GACR,MAAMT,EAAM,IAAoBpD,EAAiB6D,GAAO9D,GACxD,OAAOyD,EAAWM,OAAOV,GAW7B,YAEgB,IADG,EAC+BQ,KAAK1D,KADnD,MAEM4B,EAASxB,IACTyB,EAAKvB,EAAmBsB,EAAOE,GAAiBF,EAAOE,IAAiBP,QAE9E,OADA,IAAqBK,EAAOE,GAA0C,EAAzBF,EAAOE,IAC7CD,EAaX,KAAKgC,GAEW,IADG,EAC0BH,KAAK1D,IAAKF,EAAiB+D,GAAUhE,GAD9E,MAEM+B,EAASxB,IACTyB,EAAKvB,EAAmBsB,EAAOE,GAAiBF,EAAOE,IAAiBP,QAE9E,OADA,IAAqBK,EAAOE,GAA0C,EAAzBF,EAAOE,IAC7CD,EAeX,OAAOgC,EAASC,GAEZ,OAAe,IADH,IAAuBJ,KAAK1D,IAAKF,EAAiB+D,GAAUhE,EAAiBC,EAAiBgE,GAAkBjE,GAUhI,2BAA2BgE,EAASC,EAAiBtB,GAEjD,OAAe,IADH,IAAoC1C,EAAiB+D,GAAUhE,EAAiBC,EAAiBgE,GAAkBjE,EAAiBC,EAAiB0C,GAAmB3C,IAKrL,MAAMkE,EAA6B,SAASC,GAC/Cf,EAAWe,IAGFC,EAA6B,SAASD,EAAME,GAErD,OAAOd,EADK,IAAIe,MAAM9B,EAAkB2B,EAAME,MAIrCE,EAA6B,WAEtC,OAAOhB,EADK,IAAIe,QAIPE,EAA+B,SAASL,EAAME,GACvD,MACMI,EAAOpD,EADDyB,EAAUuB,GAAMK,OAEtBC,EAAO3E,EACbO,IAAiB4D,EAAO,EAAI,GAAKM,EACjClE,IAAiB4D,EAAO,EAAI,GAAKQ,GAGxBC,EAA+B,SAAST,EAAME,GACvD,MAAMrC,EAAKQ,EAAkB2B,EAAME,GAAM3C,QACzC,IAAqByC,EAAa,EAAPE,GAC3BQ,QAAQC,MAAM9C,IAGL+C,EAAmB,SAASZ,EAAME,GAC3C,MAAM,IAAIC,MAAM9B,EAAkB2B,EAAME,KAG/BW,EAAqB,SAASb,GACvC,MAAMf,EAAWe,K,sBCzSrB,kEA0BA,SAASc,EAAaC,GACpB,OAAQ,WAAcA,GAAKC,SAAS,IAAIC,UAAU,GAgDpDC,EAAOC,QAAU,CACfC,eAzEF,SAAyBC,GACvB,IAAInC,EACJ,GAAImC,aAAiBzF,WACnBsD,EAAMmC,OACD,GAAIA,aAAiBC,EAC1BpC,EAAM,IAAItD,WAAWyF,OAChB,IAAuB,iBAAZ,EAGhB,MAAM,IAAIlB,MAAMoB,GAFhBrC,EAAM,IAAItD,WAAW0F,EAAOE,KAAKH,EAAO,SAI1C,OAAOnC,GA+DPuC,MA1DF,SAAgBC,GACd,OAAOhD,MAAMe,UAAUkC,IAAIC,KAAKF,GAAO,SAAUG,GAC/C,OAAQA,EAAI,GAAK,IAAM,IAAMA,EAAEb,SAAS,OACvCc,KAAK,KAwDRC,WA9CF,SAAqBC,EAAOC,EAAKC,GAE/B,IADA,IAAIC,EAAM,KAAOH,EAAQ,MAChBI,EAAI,EAAGA,EAAIH,EAAIhG,OAAQmG,GAAK,EAAG,CACtC,GAAa,KAATF,EACFC,GAAOrB,EAAYmB,EAAIG,IAAIC,cAC3BF,GAAO,IACPA,GAAOrB,EAAYmB,EAAIG,EAAI,IAAIC,kBAC1B,IAAa,KAATH,EAGJ,MAAM,IAAI/B,MAAM,gBAAkB+B,GAFvCC,GAAOrB,EAAYmB,EAAIG,EAAI,IAAIC,cAC/BF,GAAOrB,EAAYmB,EAAIG,IAAIC,cAEzBD,EAAI,GAAM,EACZD,GAAO,KAAO,IAAIzD,MAAMsD,EAAM/F,OAAS,GAAG6F,KAAK,KACtCM,EAAIH,EAAIhG,OAAS,IAC1BkG,GAAO,KAGXzB,QAAQ4B,IAAIH,IA8BZI,UAzBF,SAAoBC,EAAQC,EAAGC,GAI7B,IAHA,IAAIC,GAAU,IAAIC,MAAOC,UAErBxB,EAAQ,IAAIzF,WAAW6G,GAClBL,EAAI,EAAGA,EAAIK,EAAGL,IACrBf,EAAMe,GAAKA,EAAI,IAEjB,IAAIU,GAAQ,IAAIF,MAAOC,UAIvB,IAHAnC,QAAQ4B,IAAI,8BAAgCQ,EAAQH,GAAW,MAC/DA,EAAUG,EAELV,EAAI,EAAGA,EAAIM,EAAGN,IAAK,CACtB,IAAIW,EAAUP,EAAOnB,GACjB2B,GAAS,IAAIJ,MAAOC,UACpBI,EAAKD,EAASL,EAClBA,EAAUK,EACVtC,QAAQ4B,IAAI,aAAeW,EAAK,OAASF,EAAQ9B,UAAU,EAAG,IAAM,OACpEP,QAAQ4B,IAAIY,KAAKC,MAAMV,GAAK,GAAK,KAAOQ,EAAK,KAAQ,KAAO,IAAM,uB,4DChEtE,IAAIG,EAAU,EAAQ,MAAe9B,OAmHrCJ,EAAOC,QAlHP,SAAekC,GACb,GAAIA,EAASpH,QAAU,IAAO,MAAM,IAAIqH,UAAU,qBAElD,IADA,IAAIC,EAAW,IAAI3H,WAAW,KACrB4H,EAAI,EAAGA,EAAID,EAAStH,OAAQuH,IACnCD,EAASC,GAAK,IAEhB,IAAK,IAAIpB,EAAI,EAAGA,EAAIiB,EAASpH,OAAQmG,IAAK,CACxC,IAAIqB,EAAIJ,EAASK,OAAOtB,GACpBuB,EAAKF,EAAEnG,WAAW,GACtB,GAAqB,MAAjBiG,EAASI,GAAe,MAAM,IAAIL,UAAUG,EAAI,iBACpDF,EAASI,GAAMvB,EAEjB,IAAIwB,EAAOP,EAASpH,OAChB4H,EAASR,EAASK,OAAO,GACzBI,EAASZ,KAAKZ,IAAIsB,GAAQV,KAAKZ,IAAI,KACnCyB,EAAUb,KAAKZ,IAAI,KAAOY,KAAKZ,IAAIsB,GAyCvC,SAASI,EAAcC,GACrB,GAAsB,iBAAXA,EAAuB,MAAM,IAAIX,UAAU,mBACtD,GAAsB,IAAlBW,EAAOhI,OAAgB,OAAOmH,EAAQc,MAAM,GAChD,IAAIC,EAAM,EAEV,GAAoB,MAAhBF,EAAOE,GAAX,CAIA,IAFA,IAAIC,EAAS,EACTnI,EAAS,EACNgI,EAAOE,KAASN,GACrBO,IACAD,IAMF,IAHA,IAAIjC,GAAU+B,EAAOhI,OAASkI,GAAOL,EAAU,IAAO,EAClDO,EAAO,IAAIzI,WAAWsG,GAEnB+B,EAAOE,IAAM,CAElB,IAAIG,EAAQf,EAASU,EAAO3G,WAAW6G,IAEvC,GAAc,MAAVG,EAAiB,OAErB,IADA,IAAIlC,EAAI,EACCmC,EAAMrC,EAAO,GAAc,IAAVoC,GAAelC,EAAInG,KAAqB,IAATsI,EAAaA,IAAOnC,IAC3EkC,GAAUV,EAAOS,EAAKE,KAAU,EAChCF,EAAKE,GAAQD,EAAQ,MAAS,EAC9BA,EAASA,EAAQ,MAAS,EAE5B,GAAc,IAAVA,EAAe,MAAM,IAAInE,MAAM,kBACnClE,EAASmG,EACT+B,IAGF,GAAoB,MAAhBF,EAAOE,GAAX,CAGA,IADA,IAAIK,EAAMtC,EAAOjG,EACVuI,IAAQtC,GAAsB,IAAdmC,EAAKG,IAC1BA,IAEF,IAAIC,EAAMrB,EAAQsB,YAAYN,GAAUlC,EAAOsC,IAC/CC,EAAI5F,KAAK,EAAM,EAAGuF,GAElB,IADA,IAAIZ,EAAIY,EACDI,IAAQtC,GACbuC,EAAIjB,KAAOa,EAAKG,KAElB,OAAOC,IAOT,MAAO,CACL1H,OA7FF,SAAiBkH,GAEf,IADIvF,MAAMiG,QAAQV,IAAWA,aAAkBrI,cAAcqI,EAASb,EAAQ5B,KAAKyC,KAC9Eb,EAAQwB,SAASX,GAAW,MAAM,IAAIX,UAAU,mBACrD,GAAsB,IAAlBW,EAAOhI,OAAgB,MAAO,GAMlC,IAJA,IAAImI,EAAS,EACTnI,EAAS,EACT4I,EAAS,EACTC,EAAOb,EAAOhI,OACX4I,IAAWC,GAA2B,IAAnBb,EAAOY,IAC/BA,IACAT,IAMF,IAHA,IAAIlC,GAAS4C,EAAOD,GAAUd,EAAU,IAAO,EAC3CgB,EAAM,IAAInJ,WAAWsG,GAElB2C,IAAWC,GAAM,CAItB,IAHA,IAAIR,EAAQL,EAAOY,GAEfzC,EAAI,EACC4C,EAAM9C,EAAO,GAAc,IAAVoC,GAAelC,EAAInG,KAAqB,IAAT+I,EAAaA,IAAO5C,IAC3EkC,GAAU,IAAMS,EAAIC,KAAU,EAC9BD,EAAIC,GAAQV,EAAQV,IAAU,EAC9BU,EAASA,EAAQV,IAAU,EAE7B,GAAc,IAAVU,EAAe,MAAM,IAAInE,MAAM,kBACnClE,EAASmG,EACTyC,IAIF,IADA,IAAII,EAAM/C,EAAOjG,EACVgJ,IAAQ/C,GAAqB,IAAb6C,EAAIE,IACzBA,IAIF,IADA,IAAIC,EAAMrB,EAAOsB,OAAOf,GACjBa,EAAM/C,IAAQ+C,EAAOC,GAAO7B,EAASK,OAAOqB,EAAIE,IACvD,OAAOC,GAwDPlB,aAAcA,EACd1F,OARF,SAAiB8G,GACf,IAAIzJ,EAASqI,EAAaoB,GAC1B,GAAIzJ,EAAU,OAAOA,EACrB,MAAM,IAAIwE,MAAM,WAAayD,EAAO,kB,iGClHxC,IAAIyB,EAAM,EAAQ,MACdC,EAAM,EAAQ,MAElBpE,EAAOC,QAAU,CACfoE,QAASF,EAAIE,QACbC,WAAYH,EAAIG,WAChBC,YAAaJ,EAAII,YACjBC,cAAeL,EAAIK,cACnBC,aAAcN,EAAIM,aAClBC,QAASN,EAAIM,QACbC,WAAYP,EAAIO,WAChBC,YAAaR,EAAIQ,YACjBC,cAAeT,EAAIS,cACnBC,aAAcV,EAAIU,e,qBCTpB,IAAIC,EAAO,EAAQ,MAKnB,SAASC,EAASC,EAAGC,EAAGC,GACtB,IAAIC,EAAKH,EAAEC,GAAKD,EAAEE,GACdE,EAAKJ,EAAEC,EAAI,GAAKD,EAAEE,EAAI,GACtBC,GAAM,YACRC,IAEFJ,EAAEC,GAAKE,EACPH,EAAEC,EAAI,GAAKG,EAMb,SAASC,EAASL,EAAGC,EAAGK,EAAIC,GAC1B,IAAIJ,EAAKH,EAAEC,GAAKK,EACZA,EAAK,IACPH,GAAM,YAER,IAAIC,EAAKJ,EAAEC,EAAI,GAAKM,EAChBJ,GAAM,YACRC,IAEFJ,EAAEC,GAAKE,EACPH,EAAEC,EAAI,GAAKG,EAIb,SAASI,EAAW1E,EAAKG,GACvB,OAAQH,EAAIG,GACXH,EAAIG,EAAI,IAAM,EACdH,EAAIG,EAAI,IAAM,GACdH,EAAIG,EAAI,IAAM,GAKjB,SAASwE,EAAOR,EAAGC,EAAGQ,EAAGC,EAAGC,EAAIC,GAC9B,IAAIC,EAAKC,EAAEH,GACPI,EAAKD,EAAEH,EAAK,GACZK,EAAKF,EAAEF,GACPK,EAAKH,EAAEF,EAAK,GAEhBd,EAAQC,EAAGC,EAAGC,GACdG,EAAQL,EAAGC,EAAGa,EAAIE,GAGlB,IAAIG,EAAOnB,EAAEW,GAAKX,EAAEC,GAChBmB,EAAOpB,EAAEW,EAAI,GAAKX,EAAEC,EAAI,GAC5BD,EAAEW,GAAKS,EACPpB,EAAEW,EAAI,GAAKQ,EAEXpB,EAAQC,EAAGU,EAAGC,GAGdQ,EAAOnB,EAAEE,GAAKF,EAAEU,GAChBU,EAAOpB,EAAEE,EAAI,GAAKF,EAAEU,EAAI,GACxBV,EAAEE,GAAMiB,IAAS,GAAOC,GAAQ,EAChCpB,EAAEE,EAAI,GAAMkB,IAAS,GAAOD,GAAQ,EAEpCpB,EAAQC,EAAGC,EAAGC,GACdG,EAAQL,EAAGC,EAAGgB,EAAIC,GAGlBC,EAAOnB,EAAEW,GAAKX,EAAEC,GAChBmB,EAAOpB,EAAEW,EAAI,GAAKX,EAAEC,EAAI,GACxBD,EAAEW,GAAMQ,IAAS,GAAOC,GAAQ,GAChCpB,EAAEW,EAAI,GAAMS,IAAS,GAAOD,GAAQ,GAEpCpB,EAAQC,EAAGU,EAAGC,GAGdQ,EAAOnB,EAAEE,GAAKF,EAAEU,GAChBU,EAAOpB,EAAEE,EAAI,GAAKF,EAAEU,EAAI,GACxBV,EAAEE,GAAMkB,IAAS,GAAOD,GAAQ,EAChCnB,EAAEE,EAAI,GAAMiB,IAAS,GAAOC,GAAQ,EAItC,IAAIC,EAAe,IAAIC,YAAY,CACjC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,UAAY,aAqBlCC,EAAU,IAAI9L,WAlBL,CACX,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClD,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EACnD,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EACnD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAClD,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EACnD,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClD,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAClD,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EACnD,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClD,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAMjB+F,KAAI,SAAU8B,GAAK,OAAW,EAAJA,MAI1D0C,EAAI,IAAIsB,YAAY,IACpBP,EAAI,IAAIO,YAAY,IACxB,SAASE,EAAiBC,EAAKC,GAC7B,IAAIzF,EAAI,EAGR,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAClB+D,EAAE/D,GAAKwF,EAAIE,EAAE1F,GACb+D,EAAE/D,EAAI,IAAMoF,EAAapF,GAe3B,IAXA+D,EAAE,IAAMA,EAAE,IAAMyB,EAAIG,EACpB5B,EAAE,IAAMA,EAAE,IAAOyB,EAAIG,EAAI,WAIrBF,IACF1B,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAOA,EAAE,KAIR/D,EAAI,EAAGA,EAAI,GAAIA,IAClB8E,EAAE9E,GAAKuE,EAAUiB,EAAIvB,EAAG,EAAIjE,GAO9B,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAElBwE,EAAM,EAAG,EAAG,GAAI,GAAIc,EAAY,GAAJtF,EAAS,GAAIsF,EAAY,GAAJtF,EAAS,IAC1DwE,EAAM,EAAG,GAAI,GAAI,GAAIc,EAAY,GAAJtF,EAAS,GAAIsF,EAAY,GAAJtF,EAAS,IAC3DwE,EAAM,EAAG,GAAI,GAAI,GAAIc,EAAY,GAAJtF,EAAS,GAAIsF,EAAY,GAAJtF,EAAS,IAC3DwE,EAAM,EAAG,GAAI,GAAI,GAAIc,EAAY,GAAJtF,EAAS,GAAIsF,EAAY,GAAJtF,EAAS,IAC3DwE,EAAM,EAAG,GAAI,GAAI,GAAIc,EAAY,GAAJtF,EAAS,GAAIsF,EAAY,GAAJtF,EAAS,IAC3DwE,EAAM,EAAG,GAAI,GAAI,GAAIc,EAAY,GAAJtF,EAAS,IAAKsF,EAAY,GAAJtF,EAAS,KAC5DwE,EAAM,EAAG,GAAI,GAAI,GAAIc,EAAY,GAAJtF,EAAS,IAAKsF,EAAY,GAAJtF,EAAS,KAC5DwE,EAAM,EAAG,EAAG,GAAI,GAAIc,EAAY,GAAJtF,EAAS,IAAKsF,EAAY,GAAJtF,EAAS,KAI7D,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAClBwF,EAAIE,EAAE1F,GAAKwF,EAAIE,EAAE1F,GAAK+D,EAAE/D,GAAK+D,EAAE/D,EAAI,IAQvC,SAASqD,EAAauC,EAAQC,GAC5B,GAAe,IAAXD,GAAgBA,EAAS,GAC3B,MAAM,IAAI7H,MAAM,oDAElB,GAAI8H,GAAOA,EAAIhM,OAAS,GACtB,MAAM,IAAIkE,MAAM,0DAalB,IATA,IAAIyH,EAAM,CACRvB,EAAG,IAAIzK,WAAW,KAClBkM,EAAG,IAAIL,YAAY,IACnBM,EAAG,EACHlB,EAAG,EACHmB,OAAQA,GAID5F,EAAI,EAAGA,EAAI,GAAIA,IACtBwF,EAAIE,EAAE1F,GAAKoF,EAAapF,GAE1B,IAAI8F,EAASD,EAAMA,EAAIhM,OAAS,EAUhC,OATA2L,EAAIE,EAAE,IAAM,SAAcI,GAAU,EAAKF,EAGrCC,IACFvC,EAAckC,EAAKK,GAEnBL,EAAIf,EAAI,KAGHe,EAKT,SAASlC,EAAekC,EAAKvG,GAC3B,IAAK,IAAIe,EAAI,EAAGA,EAAIf,EAAMpF,OAAQmG,IAClB,MAAVwF,EAAIf,IACNe,EAAIG,GAAKH,EAAIf,EACbc,EAAgBC,GAAK,GACrBA,EAAIf,EAAI,GAEVe,EAAIvB,EAAEuB,EAAIf,KAAOxF,EAAMe,GAM3B,SAASuD,EAAciC,GAGrB,IAFAA,EAAIG,GAAKH,EAAIf,EAENe,EAAIf,EAAI,KACbe,EAAIvB,EAAEuB,EAAIf,KAAO,EAEnBc,EAAgBC,GAAK,GAIrB,IADA,IAAIO,EAAM,IAAIvM,WAAWgM,EAAII,QACpB5F,EAAI,EAAGA,EAAIwF,EAAII,OAAQ5F,IAC9B+F,EAAI/F,GAAKwF,EAAIE,EAAE1F,GAAK,IAAO,GAAS,EAAJA,GAElC,OAAO+F,EAWT,SAAS5C,EAASlE,EAAO4G,EAAKD,GAE5BA,EAASA,GAAU,GACnB3G,EAAQ4E,EAAK7E,eAAeC,GAG5B,IAAIuG,EAAMnC,EAAYuC,EAAQC,GAE9B,OADAvC,EAAckC,EAAKvG,GACZsE,EAAaiC,GAgBtB1G,EAAOC,QAAU,CACfoE,QAASA,EACTC,WAPF,SAAqBnE,EAAO4G,EAAKD,GAC/B,IAAII,EAAS7C,EAAQlE,EAAO4G,EAAKD,GACjC,OAAO/B,EAAKxE,MAAM2G,IAMlB3C,YAAaA,EACbC,cAAeA,EACfC,aAAcA,I,qBC3QhB,IAAIM,EAAO,EAAQ,MAKnB,SAASoC,EAAWlC,EAAG/D,GACrB,OAAO+D,EAAE/D,GAAM+D,EAAE/D,EAAI,IAAM,EAAM+D,EAAE/D,EAAI,IAAM,GAAO+D,EAAE/D,EAAI,IAAM,GAIlE,SAASkG,EAAOlC,EAAGC,EAAGQ,EAAGC,EAAGrD,EAAG8E,GAC7BpC,EAAEC,GAAKD,EAAEC,GAAKD,EAAEE,GAAK5C,EACrB0C,EAAEW,GAAK0B,EAAOrC,EAAEW,GAAKX,EAAEC,GAAI,IAC3BD,EAAEU,GAAKV,EAAEU,GAAKV,EAAEW,GAChBX,EAAEE,GAAKmC,EAAOrC,EAAEE,GAAKF,EAAEU,GAAI,IAC3BV,EAAEC,GAAKD,EAAEC,GAAKD,EAAEE,GAAKkC,EACrBpC,EAAEW,GAAK0B,EAAOrC,EAAEW,GAAKX,EAAEC,GAAI,GAC3BD,EAAEU,GAAKV,EAAEU,GAAKV,EAAEW,GAChBX,EAAEE,GAAKmC,EAAOrC,EAAEE,GAAKF,EAAEU,GAAI,GAM7B,SAAS2B,EAAQ/E,EAAG8E,GAClB,OAAQ9E,IAAM8E,EAAM9E,GAAM,GAAK8E,EAIjC,IAAIE,EAAa,IAAIhB,YAAY,CAC/B,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,aAElCiB,EAAQ,IAAI9M,WAAW,CACzB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClD,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EACnD,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EACnD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAClD,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EACnD,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClD,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAClD,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EACnD,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAGjDuK,EAAI,IAAIsB,YAAY,IACpBP,EAAI,IAAIO,YAAY,IACxB,SAASkB,EAAiBf,EAAKC,GAC7B,IAAIzF,EAAI,EACR,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IACjB+D,EAAE/D,GAAKwF,EAAIE,EAAE1F,GACb+D,EAAE/D,EAAI,GAAKqG,EAAWrG,GASxB,IANA+D,EAAE,KAAOyB,EAAIG,EACb5B,EAAE,KAAQyB,EAAIG,EAAI,WACdF,IACF1B,EAAE,KAAOA,EAAE,KAGR/D,EAAI,EAAGA,EAAI,GAAIA,IAClB8E,EAAE9E,GAAKiG,EAAUT,EAAIvB,EAAG,EAAIjE,GAO9B,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAElBkG,EAAM,EAAG,EAAG,EAAG,GAAIpB,EAAEwB,EAAU,GAAJtG,EAAS,IAAK8E,EAAEwB,EAAU,GAAJtG,EAAS,KAC1DkG,EAAM,EAAG,EAAG,EAAG,GAAIpB,EAAEwB,EAAU,GAAJtG,EAAS,IAAK8E,EAAEwB,EAAU,GAAJtG,EAAS,KAC1DkG,EAAM,EAAG,EAAG,GAAI,GAAIpB,EAAEwB,EAAU,GAAJtG,EAAS,IAAK8E,EAAEwB,EAAU,GAAJtG,EAAS,KAC3DkG,EAAM,EAAG,EAAG,GAAI,GAAIpB,EAAEwB,EAAU,GAAJtG,EAAS,IAAK8E,EAAEwB,EAAU,GAAJtG,EAAS,KAC3DkG,EAAM,EAAG,EAAG,GAAI,GAAIpB,EAAEwB,EAAU,GAAJtG,EAAS,IAAK8E,EAAEwB,EAAU,GAAJtG,EAAS,KAC3DkG,EAAM,EAAG,EAAG,GAAI,GAAIpB,EAAEwB,EAAU,GAAJtG,EAAS,KAAM8E,EAAEwB,EAAU,GAAJtG,EAAS,MAC5DkG,EAAM,EAAG,EAAG,EAAG,GAAIpB,EAAEwB,EAAU,GAAJtG,EAAS,KAAM8E,EAAEwB,EAAU,GAAJtG,EAAS,MAC3DkG,EAAM,EAAG,EAAG,EAAG,GAAIpB,EAAEwB,EAAU,GAAJtG,EAAS,KAAM8E,EAAEwB,EAAU,GAAJtG,EAAS,MAI7D,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IACjBwF,EAAIE,EAAE1F,IAAM+D,EAAE/D,GAAK+D,EAAE/D,EAAI,GAQ7B,SAAS0D,EAAakC,EAAQC,GAC5B,KAAMD,EAAS,GAAKA,GAAU,IAC5B,MAAM,IAAI7H,MAAM,iDAElB,IAAI+H,EAASD,EAAMA,EAAIhM,OAAS,EAChC,GAAIgM,KAASC,EAAS,GAAKA,GAAU,IACnC,MAAM,IAAI/H,MAAM,8CAGlB,IAAIyH,EAAM,CACRE,EAAG,IAAIL,YAAYgB,GACnBpC,EAAG,IAAIoB,YAAY,IACnBZ,EAAG,EACHkB,EAAG,EACHC,OAAQA,GASV,OAPAJ,EAAIE,EAAE,IAAM,SAAcI,GAAU,EAAKF,EAErCE,EAAS,IACXnC,EAAc6B,EAAKK,GACnBL,EAAIf,EAAI,IAGHe,EAKT,SAAS7B,EAAe6B,EAAKvG,GAC3B,IAAK,IAAIe,EAAI,EAAGA,EAAIf,EAAMpF,OAAQmG,IAClB,KAAVwF,EAAIf,IACNe,EAAIG,GAAKH,EAAIf,EACb8B,EAAgBf,GAAK,GACrBA,EAAIf,EAAI,GAEVe,EAAIvB,EAAEuB,EAAIf,KAAOxF,EAAMe,GAM3B,SAAS4D,EAAc4B,GAErB,IADAA,EAAIG,GAAKH,EAAIf,EACNe,EAAIf,EAAI,IACbe,EAAIvB,EAAEuB,EAAIf,KAAO,EAEnB8B,EAAgBf,GAAK,GAIrB,IADA,IAAIO,EAAM,IAAIvM,WAAWgM,EAAII,QACpB5F,EAAI,EAAGA,EAAIwF,EAAII,OAAQ5F,IAC9B+F,EAAI/F,GAAMwF,EAAIE,EAAE1F,GAAK,IAAO,GAAS,EAAJA,GAAW,IAE9C,OAAO+F,EAWT,SAASvC,EAASvE,EAAO4G,EAAKD,GAE5BA,EAASA,GAAU,GACnB3G,EAAQ4E,EAAK7E,eAAeC,GAG5B,IAAIuG,EAAM9B,EAAYkC,EAAQC,GAE9B,OADAlC,EAAc6B,EAAKvG,GACZ2E,EAAa4B,GAgBtB1G,EAAOC,QAAU,CACfyE,QAASA,EACTC,WAPF,SAAqBxE,EAAO4G,EAAKD,GAC/B,IAAII,EAASxC,EAAQvE,EAAO4G,EAAKD,GACjC,OAAO/B,EAAKxE,MAAM2G,IAMlBtC,YAAaA,EACbC,cAAeA,EACfC,aAAcA,I,mCC5LhB,YAOA,MAAM4C,EAAO,EAAQ,MAEfC,EAAK,EAAQ,MAEnB1H,EAAQ2H,MAAQD,EAAGC,MACnB3H,EAAQ4H,MAAQF,EAAGE,MACnB5H,EAAQ6H,eAAiBH,EAAGG,eAE5B,MAAMC,EAAS,EAAQ,MAiMvB,SAASC,EAAUC,GACjBhI,EAAQ7C,OAAO6K,GA1LjBhI,EAAQiI,YAAc,SAAsBC,GAC1C,IAAK/H,EAAOsD,SAASyE,GACnB,MAAM,IAAIlJ,MAAM,2BAGlB,OAAOkJ,EAAKrI,SAAS,QASvBG,EAAQmI,cAAgB,SAAwBD,GAC9C,OAAO/H,EAAOE,KAAK6H,EAAM,QAS3BlI,EAAQoI,YAAc,SAAsBF,GAC1C,IAAK/H,EAAOsD,SAASyE,GACnB,MAAM,IAAIlJ,MAAM,2BAGlB,OAAOyI,EAAK7L,OAAOsM,IASrBlI,EAAQqI,cAAgB,SAAwBH,GAC9C,IAAII,EAAUJ,EAKd,OAJI/H,EAAOsD,SAASyE,KAClBI,EAAUJ,EAAKrI,YAGVM,EAAOE,KAAKoH,EAAKtK,OAAOmL,KASjCtI,EAAQ7C,OAAS,SAAiBxB,GAChC,IAAMwE,EAAOsD,SAAS9H,GACpB,MAAM,IAAIqD,MAAM,8BAGlB,GAAIrD,EAAIb,OAAS,EACf,MAAM,IAAIkE,MAAM,2CAGlB,MAAM9C,EAAO4L,EAAO3K,OAAOxB,GAC3B,IAAKqE,EAAQuI,YAAYrM,GACvB,MAAM,IAAI8C,MAAM,sCAAsC9C,EAAK2D,SAAS,OAEtElE,EAAMA,EAAIS,MAAM0L,EAAO3K,OAAOoD,OAE9B,MAAMnF,EAAM0M,EAAO3K,OAAOxB,GAC1B,GAAIP,EAAM,EACR,MAAM,IAAI4D,MAAM,+BAA+B5D,EAAIyE,SAAS,OAI9D,IAFAlE,EAAMA,EAAIS,MAAM0L,EAAO3K,OAAOoD,QAEtBzF,SAAWM,EACjB,MAAM,IAAI4D,MAAM,oCAAoCrD,EAAIkE,SAAS,UAGnE,MAAO,CACL3D,KAAMA,EACNsM,KAAMd,EAAGE,MAAM1L,GACfpB,OAAQM,EACRqN,OAAQ9M,IAcZqE,EAAQpE,OAAS,SAAiB6M,EAAQvM,EAAMpB,GAC9C,IAAK2N,QAAmB9K,IAATzB,EACb,MAAM,IAAI8C,MAAM,6DAIlB,MAAM0J,EAAS1I,EAAQ2I,WAAWzM,GAElC,IAAMiE,EAAOsD,SAASgF,GACpB,MAAM,IAAIzJ,MAAM,6BAOlB,GAJc,MAAVlE,IACFA,EAAS2N,EAAO3N,QAGdA,GAAU2N,EAAO3N,SAAWA,EAC9B,MAAM,IAAIkE,MAAM,sDAGlB,OAAOmB,EAAOyI,OAAO,CACnBzI,EAAOE,KAAKyH,EAAOlM,OAAO8M,IAC1BvI,EAAOE,KAAKyH,EAAOlM,OAAOd,IAC1B2N,KAUJzI,EAAQ2I,WAAa,SAAqBH,GACxC,IAAItM,EAAOsM,EAEX,GAAoB,iBAATA,EAAmB,CAC5B,QAAuB7K,IAAnB+J,EAAGC,MAAMa,GACX,MAAM,IAAIxJ,MAAM,qCAAqCwJ,KAEvDtM,EAAOwL,EAAGC,MAAMa,GAGlB,GAAoB,iBAATtM,EACT,MAAM,IAAI8C,MAAM,+CAA+C9C,KAGjE,QAAuByB,IAAnB+J,EAAGE,MAAM1L,KAAwB8D,EAAQ6I,UAAU3M,GACrD,MAAM,IAAI8C,MAAM,+BAA+B9C,KAGjD,OAAOA,GAST8D,EAAQ6I,UAAY,SAAkB3M,GACpC,OAAOA,EAAO,GAAKA,EAAO,IAS5B8D,EAAQuI,YAAc,SAAoBrM,GACxC,QAAI8D,EAAQ6I,UAAU3M,MAIlBwL,EAAGE,MAAM1L,IAiBf8D,EAAQ+H,SAAWA,EASnB/H,EAAQ8I,OAAS,SAAiBd,GAGhC,OAFAD,EAASC,GAEFA,EAAU5L,MAAM,EAAG,M,+CC/N5B,IAAI2M,EAAQ,EAAQ,MAGpBhJ,EAAOC,QAAU+I,EAFF,+D,qBCAf,IAAIvO,EAAS,EAAQ,KACjB2F,EAAS3F,EAAO2F,OAGpB,SAAS6I,EAAWC,EAAKC,GACvB,IAAK,IAAIpC,KAAOmC,EACdC,EAAIpC,GAAOmC,EAAInC,GAWnB,SAASqC,EAAYvO,EAAKwO,EAAkBtO,GAC1C,OAAOqF,EAAOvF,EAAKwO,EAAkBtO,GATnCqF,EAAOE,MAAQF,EAAO4C,OAAS5C,EAAOoD,aAAepD,EAAOkJ,gBAC9DtJ,EAAOC,QAAUxF,GAGjBwO,EAAUxO,EAAQwF,GAClBA,EAAQG,OAASgJ,GAQnBH,EAAU7I,EAAQgJ,GAElBA,EAAW9I,KAAO,SAAUzF,EAAKwO,EAAkBtO,GACjD,GAAmB,iBAARF,EACT,MAAM,IAAIuH,UAAU,iCAEtB,OAAOhC,EAAOvF,EAAKwO,EAAkBtO,IAGvCqO,EAAWpG,MAAQ,SAAUhC,EAAMrD,EAAM4L,GACvC,GAAoB,iBAATvI,EACT,MAAM,IAAIoB,UAAU,6BAEtB,IAAIxG,EAAMwE,EAAOY,GAUjB,YATapD,IAATD,EACsB,iBAAb4L,EACT3N,EAAI+B,KAAKA,EAAM4L,GAEf3N,EAAI+B,KAAKA,GAGX/B,EAAI+B,KAAK,GAEJ/B,GAGTwN,EAAW5F,YAAc,SAAUxC,GACjC,GAAoB,iBAATA,EACT,MAAM,IAAIoB,UAAU,6BAEtB,OAAOhC,EAAOY,IAGhBoI,EAAWE,gBAAkB,SAAUtI,GACrC,GAAoB,iBAATA,EACT,MAAM,IAAIoB,UAAU,6BAEtB,OAAO3H,EAAO+O,WAAWxI,K,kCCxD3Bf,EAAQ2H,MAAQvJ,OAAOoL,OAAO,CAC5B,SAAc,EACd,KAAc,GACd,WAAc,GACd,WAAc,GACd,eAAgB,GAChB,WAAc,GACd,WAAc,GACd,WAAc,GACd,WAAc,GACd,YAAc,GACd,YAAc,GACd,aAAc,GACd,aAAc,GACd,aAAc,GACd,aAAc,GACd,cAAe,GACf,aAAe,GACf,YAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,YAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,KACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,iBAAkB,MAClB,iBAAkB,MAClB,iBAAkB,MAClB,iBAAkB,QAGpBxJ,EAAQ4H,MAAQxJ,OAAOoL,OAAO,CAC5BC,EAAK,WAGL,GAAM,OACN,GAAM,WACN,GAAM,WACN,GAAM,eACN,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,YACN,GAAM,YACN,GAAM,aACN,GAAM,aACN,GAAM,aACN,GAAM,aAEN,GAAM,cACN,GAAM,aAGN,MAAQ,YACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,YACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cAGR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,cACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,KAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gB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","file":"2.main.js","sourcesContent":["import * as wasm from './wasm_key_manager_bg.wasm';\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm(arg) {\n    const ptr = wasm.__wbindgen_malloc(arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetInt32Memory = null;\nfunction getInt32Memory() {\n    if (cachegetInt32Memory === null || cachegetInt32Memory.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory;\n}\n\nfunction getArrayU8FromWasm(ptr, len) {\n    return getUint8Memory().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm(arg) {\n\n    let len = arg.length;\n    let ptr = wasm.__wbindgen_malloc(len);\n\n    const mem = getUint8Memory();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = wasm.__wbindgen_realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @description Derive seed from HHA hApp ID bytes, email, and password\n*\n* @example\n* const hha_id = new Uint8Array([\n*     66, 123, 133, 136, 133,   6, 247, 116,\n*      4,  59,  43, 206, 131, 168, 123,  44,\n*     54,  52,   3,  53, 134,  75, 137,  43,\n*     63,  26, 216, 191,  67, 117,  38, 142\n* ]);\n*\n* deriveSeedFrom( hha_id, \\'example@holo.host\\', \\'password\\' ); // Uint8Array [ ... ]\n* @param {Uint8Array} hha_id\n* @param {string} email\n* @param {string} password\n* @returns {Uint8Array}\n*/\nexport function deriveSeedFrom(hha_id, email, password) {\n    const retptr = 8;\n    const ret = wasm.deriveSeedFrom(retptr, passArray8ToWasm(hha_id), WASM_VECTOR_LEN, passStringToWasm(email), WASM_VECTOR_LEN, passStringToWasm(password), WASM_VECTOR_LEN);\n    const memi32 = getInt32Memory();\n    const v0 = getArrayU8FromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n    wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n    return v0;\n}\n\n/**\n* @ignore\n* @param {string} public_key_hcid\n* @returns {Uint8Array}\n*/\nexport function from_hcs0(public_key_hcid) {\n    const retptr = 8;\n    const ret = wasm.from_hcs0(retptr, passStringToWasm(public_key_hcid), WASM_VECTOR_LEN);\n    const memi32 = getInt32Memory();\n    const v0 = getArrayU8FromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n    wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n    return v0;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n/**\n* @ignore\n* @param {Uint8Array} public_key_bytes\n* @returns {string}\n*/\nexport function to_hcs0(public_key_bytes) {\n    const retptr = 8;\n    const ret = wasm.to_hcs0(retptr, passArray8ToWasm(public_key_bytes), WASM_VECTOR_LEN);\n    const memi32 = getInt32Memory();\n    const v0 = getStringFromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n    wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n    return v0;\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n/**\n*/\nexport class KeyManager {\n\n    static __wrap(ptr) {\n        const obj = Object.create(KeyManager.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_keymanager_free(ptr);\n    }\n    /**\n    * @description Create an Ed25519 key manager out of seed\n    * @see deriveSeedFrom\n    * @example\n    * const hha_id = new crypto.subtle.digest( \\\"SHA-256\\\", new Uint8Array( [] ));\n    * const seed = deriveSeedFrom( hha_id, \\\"example@holo.host\\\", \\\"password\\\" );\n    *\n    * new KeyManager( seed );\n    * @param {Uint8Array} seed\n    * @returns {KeyManager}\n    */\n    constructor(seed) {\n        const ret = wasm.keymanager_new(passArray8ToWasm(seed), WASM_VECTOR_LEN);\n        return KeyManager.__wrap(ret);\n    }\n    /**\n    * @description Get public key bytes\n    *\n    * @example\n    * const keys = new KeyManager( seed );\n    *\n    * keys.publicKey() // Uint8Array [ ... ]\n    * @returns {Uint8Array}\n    */\n    publicKey() {\n        const retptr = 8;\n        const ret = wasm.keymanager_publicKey(retptr, this.ptr);\n        const memi32 = getInt32Memory();\n        const v0 = getArrayU8FromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n        wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n        return v0;\n    }\n    /**\n    * @description Sign message and return signature bytes\n    *\n    * @example\n    * const keys = new KeyManager( seed );\n    * const message = new Uint8Array( [0xca, 0xfe] );\n    *\n    * keys.sign( message ); // Uint8Array [ ... ]\n    * @param {Uint8Array} message\n    * @returns {Uint8Array}\n    */\n    sign(message) {\n        const retptr = 8;\n        const ret = wasm.keymanager_sign(retptr, this.ptr, passArray8ToWasm(message), WASM_VECTOR_LEN);\n        const memi32 = getInt32Memory();\n        const v0 = getArrayU8FromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n        wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n        return v0;\n    }\n    /**\n    * @description Verify signed message against manager\\'s public key\n    *\n    * @example\n    * const keys = new KeyManager( seed );\n    * const message = new Uint8Array( [0xca, 0xfe] );\n    * const signature = keys.sign( message );\n    *\n    * keys.verify( message, signature ) === true;\n    * @param {Uint8Array} message\n    * @param {Uint8Array} signature_bytes\n    * @returns {boolean}\n    */\n    verify(message, signature_bytes) {\n        const ret = wasm.keymanager_verify(this.ptr, passArray8ToWasm(message), WASM_VECTOR_LEN, passArray8ToWasm(signature_bytes), WASM_VECTOR_LEN);\n        return ret !== 0;\n    }\n    /**\n    * @description Verify signed message with provided public key\n    * @param {Uint8Array} message\n    * @param {Uint8Array} signature_bytes\n    * @param {Uint8Array} public_key_bytes\n    * @returns {boolean}\n    */\n    static verifyWithPublicKey(message, signature_bytes, public_key_bytes) {\n        const ret = wasm.keymanager_verifyWithPublicKey(passArray8ToWasm(message), WASM_VECTOR_LEN, passArray8ToWasm(signature_bytes), WASM_VECTOR_LEN, passArray8ToWasm(public_key_bytes), WASM_VECTOR_LEN);\n        return ret !== 0;\n    }\n}\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_new_b523d83e932ae6ee = function(arg0, arg1) {\n    const ret = new Error(getStringFromWasm(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    const ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ret0 = passStringToWasm(ret);\n    const ret1 = WASM_VECTOR_LEN;\n    getInt32Memory()[arg0 / 4 + 0] = ret0;\n    getInt32Memory()[arg0 / 4 + 1] = ret1;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    const v0 = getStringFromWasm(arg0, arg1).slice();\n    wasm.__wbindgen_free(arg0, arg1 * 1);\n    console.error(v0);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm(arg0, arg1));\n};\n\nexport const __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\n","var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  var ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (input instanceof Buffer) {\n    ret = new Uint8Array(input)\n  } else if (typeof (input) === 'string') {\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map.call(bytes, function (n) {\n    return (n < 16 ? '0' : '') + n.toString(16)\n  }).join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  var msg = '\\n' + label + ' = '\n  for (var i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  var startMs = new Date().getTime()\n\n  var input = new Uint8Array(N)\n  for (var i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  var genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (i = 0; i < M; i++) {\n    var hashHex = hashFn(input)\n    var hashMs = new Date().getTime()\n    var ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var b2b = require('./blake2b')\nvar b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction blake2bInit (outlen, key) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n\n  // state, 'param block'\n  var ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i]\n  }\n  var keylen = key ? key.length : 0\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2b (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2bInit(outlen, key)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2bHex (input, key, outlen) {\n  var output = blake2b(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nvar BLAKE2S_IV = new Uint32Array([\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\n\nvar SIGMA = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\n\n// Compression function. \"last\" flag indicates last block\nvar v = new Uint32Array(16)\nvar m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  var i = 0\n  for (i = 0; i < 8; i++) { // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\n  if (last) { // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) { // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  var keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  var ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint32Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 64) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  var output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n","/**\n * Multihash implementation in JavaScript.\n *\n * @module multihash\n */\n'use strict'\n\nconst bs58 = require('bs58')\n\nconst cs = require('./constants')\n\nexports.names = cs.names\nexports.codes = cs.codes\nexports.defaultLengths = cs.defaultLengths\n\nconst varint = require('varint')\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toHexString = function toHexString (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return hash.toString('hex')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Buffer}\n */\nexports.fromHexString = function fromHexString (hash) {\n  return Buffer.from(hash, 'hex')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toB58String = function toB58String (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return bs58.encode(hash)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Buffer} hash\n * @returns {Buffer}\n */\nexports.fromB58String = function fromB58String (hash) {\n  let encoded = hash\n  if (Buffer.isBuffer(hash)) {\n    encoded = hash.toString()\n  }\n\n  return Buffer.from(bs58.decode(encoded))\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Buffer} buf\n * @returns {{code: number, name: string, length: number, digest: Buffer}} result\n */\nexports.decode = function decode (buf) {\n  if (!(Buffer.isBuffer(buf))) {\n    throw new Error('multihash must be a Buffer')\n  }\n\n  if (buf.length < 3) {\n    throw new Error('multihash too short. must be > 3 bytes.')\n  }\n\n  const code = varint.decode(buf)\n  if (!exports.isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  const len = varint.decode(buf)\n  if (len < 1) {\n    throw new Error(`multihash invalid length: 0x${len.toString(16)}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${buf.toString('hex')}`)\n  }\n\n  return {\n    code: code,\n    name: cs.codes[code],\n    length: len,\n    digest: buf\n  }\n}\n\n/**\n *  Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Buffer} digest\n * @param {string|number} code\n * @param {number} [length]\n * @returns {Buffer}\n */\nexports.encode = function encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = exports.coerceCode(code)\n\n  if (!(Buffer.isBuffer(digest))) {\n    throw new Error('digest should be a Buffer')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  return Buffer.concat([\n    Buffer.from(varint.encode(hashfn)),\n    Buffer.from(varint.encode(length)),\n    digest\n  ])\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n * @param {string|number} name\n * @returns {number}\n */\nexports.coerceCode = function coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (cs.names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = cs.names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  if (cs.codes[code] === undefined && !exports.isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks wether a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isAppCode = function appCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isValidCode = function validCode (code) {\n  if (exports.isAppCode(code)) {\n    return true\n  }\n\n  if (cs.codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  exports.decode(multihash) // throws if bad.\n}\nexports.validate = validate\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nexports.prefix = function prefix (multihash) {\n  validate(multihash)\n\n  return multihash.slice(0, 2)\n}\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/* eslint quote-props: off */\n/* eslint key-spacing: off */\n'use strict'\n\nexports.names = Object.freeze({\n  'identity':   0x0,\n  'sha1':       0x11,\n  'sha2-256':   0x12,\n  'sha2-512':   0x13,\n  'dbl-sha2-256': 0x56,\n  'sha3-224':   0x17,\n  'sha3-256':   0x16,\n  'sha3-384':   0x15,\n  'sha3-512':   0x14,\n  'shake-128':  0x18,\n  'shake-256':  0x19,\n  'keccak-224': 0x1A,\n  'keccak-256': 0x1B,\n  'keccak-384': 0x1C,\n  'keccak-512': 0x1D,\n  'murmur3-128': 0x22,\n  'murmur3-32':  0x23,\n  'blake2b-8':   0xb201,\n  'blake2b-16':  0xb202,\n  'blake2b-24':  0xb203,\n  'blake2b-32':  0xb204,\n  'blake2b-40':  0xb205,\n  'blake2b-48':  0xb206,\n  'blake2b-56':  0xb207,\n  'blake2b-64':  0xb208,\n  'blake2b-72':  0xb209,\n  'blake2b-80':  0xb20a,\n  'blake2b-88':  0xb20b,\n  'blake2b-96':  0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8':   0xb241,\n  'blake2s-16':  0xb242,\n  'blake2s-24':  0xb243,\n  'blake2s-32':  0xb244,\n  'blake2s-40':  0xb245,\n  'blake2s-48':  0xb246,\n  'blake2s-56':  0xb247,\n  'blake2s-64':  0xb248,\n  'blake2s-72':  0xb249,\n  'blake2s-80':  0xb24a,\n  'blake2s-88':  0xb24b,\n  'blake2s-96':  0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'Skein256-8': 0xb301,\n  'Skein256-16': 0xb302,\n  'Skein256-24': 0xb303,\n  'Skein256-32': 0xb304,\n  'Skein256-40': 0xb305,\n  'Skein256-48': 0xb306,\n  'Skein256-56': 0xb307,\n  'Skein256-64': 0xb308,\n  'Skein256-72': 0xb309,\n  'Skein256-80': 0xb30a,\n  'Skein256-88': 0xb30b,\n  'Skein256-96': 0xb30c,\n  'Skein256-104': 0xb30d,\n  'Skein256-112': 0xb30e,\n  'Skein256-120': 0xb30f,\n  'Skein256-128': 0xb310,\n  'Skein256-136': 0xb311,\n  'Skein256-144': 0xb312,\n  'Skein256-152': 0xb313,\n  'Skein256-160': 0xb314,\n  'Skein256-168': 0xb315,\n  'Skein256-176': 0xb316,\n  'Skein256-184': 0xb317,\n  'Skein256-192': 0xb318,\n  'Skein256-200': 0xb319,\n  'Skein256-208': 0xb31a,\n  'Skein256-216': 0xb31b,\n  'Skein256-224': 0xb31c,\n  'Skein256-232': 0xb31d,\n  'Skein256-240': 0xb31e,\n  'Skein256-248': 0xb31f,\n  'Skein256-256': 0xb320,\n  'Skein512-8': 0xb321,\n  'Skein512-16': 0xb322,\n  'Skein512-24': 0xb323,\n  'Skein512-32': 0xb324,\n  'Skein512-40': 0xb325,\n  'Skein512-48': 0xb326,\n  'Skein512-56': 0xb327,\n  'Skein512-64': 0xb328,\n  'Skein512-72': 0xb329,\n  'Skein512-80': 0xb32a,\n  'Skein512-88': 0xb32b,\n  'Skein512-96': 0xb32c,\n  'Skein512-104': 0xb32d,\n  'Skein512-112': 0xb32e,\n  'Skein512-120': 0xb32f,\n  'Skein512-128': 0xb330,\n  'Skein512-136': 0xb331,\n  'Skein512-144': 0xb332,\n  'Skein512-152': 0xb333,\n  'Skein512-160': 0xb334,\n  'Skein512-168': 0xb335,\n  'Skein512-176': 0xb336,\n  'Skein512-184': 0xb337,\n  'Skein512-192': 0xb338,\n  'Skein512-200': 0xb339,\n  'Skein512-208': 0xb33a,\n  'Skein512-216': 0xb33b,\n  'Skein512-224': 0xb33c,\n  'Skein512-232': 0xb33d,\n  'Skein512-240': 0xb33e,\n  'Skein512-248': 0xb33f,\n  'Skein512-256': 0xb340,\n  'Skein512-264': 0xb341,\n  'Skein512-272': 0xb342,\n  'Skein512-280': 0xb343,\n  'Skein512-288': 0xb344,\n  'Skein512-296': 0xb345,\n  'Skein512-304': 0xb346,\n  'Skein512-312': 0xb347,\n  'Skein512-320': 0xb348,\n  'Skein512-328': 0xb349,\n  'Skein512-336': 0xb34a,\n  'Skein512-344': 0xb34b,\n  'Skein512-352': 0xb34c,\n  'Skein512-360': 0xb34d,\n  'Skein512-368': 0xb34e,\n  'Skein512-376': 0xb34f,\n  'Skein512-384': 0xb350,\n  'Skein512-392': 0xb351,\n  'Skein512-400': 0xb352,\n  'Skein512-408': 0xb353,\n  'Skein512-416': 0xb354,\n  'Skein512-424': 0xb355,\n  'Skein512-432': 0xb356,\n  'Skein512-440': 0xb357,\n  'Skein512-448': 0xb358,\n  'Skein512-456': 0xb359,\n  'Skein512-464': 0xb35a,\n  'Skein512-472': 0xb35b,\n  'Skein512-480': 0xb35c,\n  'Skein512-488': 0xb35d,\n  'Skein512-496': 0xb35e,\n  'Skein512-504': 0xb35f,\n  'Skein512-512': 0xb360,\n  'Skein1024-8': 0xb361,\n  'Skein1024-16': 0xb362,\n  'Skein1024-24': 0xb363,\n  'Skein1024-32': 0xb364,\n  'Skein1024-40': 0xb365,\n  'Skein1024-48': 0xb366,\n  'Skein1024-56': 0xb367,\n  'Skein1024-64': 0xb368,\n  'Skein1024-72': 0xb369,\n  'Skein1024-80': 0xb36a,\n  'Skein1024-88': 0xb36b,\n  'Skein1024-96': 0xb36c,\n  'Skein1024-104': 0xb36d,\n  'Skein1024-112': 0xb36e,\n  'Skein1024-120': 0xb36f,\n  'Skein1024-128': 0xb370,\n  'Skein1024-136': 0xb371,\n  'Skein1024-144': 0xb372,\n  'Skein1024-152': 0xb373,\n  'Skein1024-160': 0xb374,\n  'Skein1024-168': 0xb375,\n  'Skein1024-176': 0xb376,\n  'Skein1024-184': 0xb377,\n  'Skein1024-192': 0xb378,\n  'Skein1024-200': 0xb379,\n  'Skein1024-208': 0xb37a,\n  'Skein1024-216': 0xb37b,\n  'Skein1024-224': 0xb37c,\n  'Skein1024-232': 0xb37d,\n  'Skein1024-240': 0xb37e,\n  'Skein1024-248': 0xb37f,\n  'Skein1024-256': 0xb380,\n  'Skein1024-264': 0xb381,\n  'Skein1024-272': 0xb382,\n  'Skein1024-280': 0xb383,\n  'Skein1024-288': 0xb384,\n  'Skein1024-296': 0xb385,\n  'Skein1024-304': 0xb386,\n  'Skein1024-312': 0xb387,\n  'Skein1024-320': 0xb388,\n  'Skein1024-328': 0xb389,\n  'Skein1024-336': 0xb38a,\n  'Skein1024-344': 0xb38b,\n  'Skein1024-352': 0xb38c,\n  'Skein1024-360': 0xb38d,\n  'Skein1024-368': 0xb38e,\n  'Skein1024-376': 0xb38f,\n  'Skein1024-384': 0xb390,\n  'Skein1024-392': 0xb391,\n  'Skein1024-400': 0xb392,\n  'Skein1024-408': 0xb393,\n  'Skein1024-416': 0xb394,\n  'Skein1024-424': 0xb395,\n  'Skein1024-432': 0xb396,\n  'Skein1024-440': 0xb397,\n  'Skein1024-448': 0xb398,\n  'Skein1024-456': 0xb399,\n  'Skein1024-464': 0xb39a,\n  'Skein1024-472': 0xb39b,\n  'Skein1024-480': 0xb39c,\n  'Skein1024-488': 0xb39d,\n  'Skein1024-496': 0xb39e,\n  'Skein1024-504': 0xb39f,\n  'Skein1024-512': 0xb3a0,\n  'Skein1024-520': 0xb3a1,\n  'Skein1024-528': 0xb3a2,\n  'Skein1024-536': 0xb3a3,\n  'Skein1024-544': 0xb3a4,\n  'Skein1024-552': 0xb3a5,\n  'Skein1024-560': 0xb3a6,\n  'Skein1024-568': 0xb3a7,\n  'Skein1024-576': 0xb3a8,\n  'Skein1024-584': 0xb3a9,\n  'Skein1024-592': 0xb3aa,\n  'Skein1024-600': 0xb3ab,\n  'Skein1024-608': 0xb3ac,\n  'Skein1024-616': 0xb3ad,\n  'Skein1024-624': 0xb3ae,\n  'Skein1024-632': 0xb3af,\n  'Skein1024-640': 0xb3b0,\n  'Skein1024-648': 0xb3b1,\n  'Skein1024-656': 0xb3b2,\n  'Skein1024-664': 0xb3b3,\n  'Skein1024-672': 0xb3b4,\n  'Skein1024-680': 0xb3b5,\n  'Skein1024-688': 0xb3b6,\n  'Skein1024-696': 0xb3b7,\n  'Skein1024-704': 0xb3b8,\n  'Skein1024-712': 0xb3b9,\n  'Skein1024-720': 0xb3ba,\n  'Skein1024-728': 0xb3bb,\n  'Skein1024-736': 0xb3bc,\n  'Skein1024-744': 0xb3bd,\n  'Skein1024-752': 0xb3be,\n  'Skein1024-760': 0xb3bf,\n  'Skein1024-768': 0xb3c0,\n  'Skein1024-776': 0xb3c1,\n  'Skein1024-784': 0xb3c2,\n  'Skein1024-792': 0xb3c3,\n  'Skein1024-800': 0xb3c4,\n  'Skein1024-808': 0xb3c5,\n  'Skein1024-816': 0xb3c6,\n  'Skein1024-824': 0xb3c7,\n  'Skein1024-832': 0xb3c8,\n  'Skein1024-840': 0xb3c9,\n  'Skein1024-848': 0xb3ca,\n  'Skein1024-856': 0xb3cb,\n  'Skein1024-864': 0xb3cc,\n  'Skein1024-872': 0xb3cd,\n  'Skein1024-880': 0xb3ce,\n  'Skein1024-888': 0xb3cf,\n  'Skein1024-896': 0xb3d0,\n  'Skein1024-904': 0xb3d1,\n  'Skein1024-912': 0xb3d2,\n  'Skein1024-920': 0xb3d3,\n  'Skein1024-928': 0xb3d4,\n  'Skein1024-936': 0xb3d5,\n  'Skein1024-944': 0xb3d6,\n  'Skein1024-952': 0xb3d7,\n  'Skein1024-960': 0xb3d8,\n  'Skein1024-968': 0xb3d9,\n  'Skein1024-976': 0xb3da,\n  'Skein1024-984': 0xb3db,\n  'Skein1024-992': 0xb3dc,\n  'Skein1024-1000': 0xb3dd,\n  'Skein1024-1008': 0xb3de,\n  'Skein1024-1016': 0xb3df,\n  'Skein1024-1024': 0xb3e0\n})\n\nexports.codes = Object.freeze({\n  0x0: 'identity',\n\n  // sha family\n  0x11: 'sha1',\n  0x12: 'sha2-256',\n  0x13: 'sha2-512',\n  0x56: 'dbl-sha2-256',\n  0x17: 'sha3-224',\n  0x16: 'sha3-256',\n  0x15: 'sha3-384',\n  0x14: 'sha3-512',\n  0x18: 'shake-128',\n  0x19: 'shake-256',\n  0x1A: 'keccak-224',\n  0x1B: 'keccak-256',\n  0x1C: 'keccak-384',\n  0x1D: 'keccak-512',\n\n  0x22: 'murmur3-128',\n  0x23: 'murmur3-32',\n\n  // blake2\n  0xb201: 'blake2b-8',\n  0xb202: 'blake2b-16',\n  0xb203: 'blake2b-24',\n  0xb204: 'blake2b-32',\n  0xb205: 'blake2b-40',\n  0xb206: 'blake2b-48',\n  0xb207: 'blake2b-56',\n  0xb208: 'blake2b-64',\n  0xb209: 'blake2b-72',\n  0xb20a: 'blake2b-80',\n  0xb20b: 'blake2b-88',\n  0xb20c: 'blake2b-96',\n  0xb20d: 'blake2b-104',\n  0xb20e: 'blake2b-112',\n  0xb20f: 'blake2b-120',\n  0xb210: 'blake2b-128',\n  0xb211: 'blake2b-136',\n  0xb212: 'blake2b-144',\n  0xb213: 'blake2b-152',\n  0xb214: 'blake2b-160',\n  0xb215: 'blake2b-168',\n  0xb216: 'blake2b-176',\n  0xb217: 'blake2b-184',\n  0xb218: 'blake2b-192',\n  0xb219: 'blake2b-200',\n  0xb21a: 'blake2b-208',\n  0xb21b: 'blake2b-216',\n  0xb21c: 'blake2b-224',\n  0xb21d: 'blake2b-232',\n  0xb21e: 'blake2b-240',\n  0xb21f: 'blake2b-248',\n  0xb220: 'blake2b-256',\n  0xb221: 'blake2b-264',\n  0xb222: 'blake2b-272',\n  0xb223: 'blake2b-280',\n  0xb224: 'blake2b-288',\n  0xb225: 'blake2b-296',\n  0xb226: 'blake2b-304',\n  0xb227: 'blake2b-312',\n  0xb228: 'blake2b-320',\n  0xb229: 'blake2b-328',\n  0xb22a: 'blake2b-336',\n  0xb22b: 'blake2b-344',\n  0xb22c: 'blake2b-352',\n  0xb22d: 'blake2b-360',\n  0xb22e: 'blake2b-368',\n  0xb22f: 'blake2b-376',\n  0xb230: 'blake2b-384',\n  0xb231: 'blake2b-392',\n  0xb232: 'blake2b-400',\n  0xb233: 'blake2b-408',\n  0xb234: 'blake2b-416',\n  0xb235: 'blake2b-424',\n  0xb236: 'blake2b-432',\n  0xb237: 'blake2b-440',\n  0xb238: 'blake2b-448',\n  0xb239: 'blake2b-456',\n  0xb23a: 'blake2b-464',\n  0xb23b: 'blake2b-472',\n  0xb23c: 'blake2b-480',\n  0xb23d: 'blake2b-488',\n  0xb23e: 'blake2b-496',\n  0xb23f: 'blake2b-504',\n  0xb240: 'blake2b-512',\n  0xb241: 'blake2s-8',\n  0xb242: 'blake2s-16',\n  0xb243: 'blake2s-24',\n  0xb244: 'blake2s-32',\n  0xb245: 'blake2s-40',\n  0xb246: 'blake2s-48',\n  0xb247: 'blake2s-56',\n  0xb248: 'blake2s-64',\n  0xb249: 'blake2s-72',\n  0xb24a: 'blake2s-80',\n  0xb24b: 'blake2s-88',\n  0xb24c: 'blake2s-96',\n  0xb24d: 'blake2s-104',\n  0xb24e: 'blake2s-112',\n  0xb24f: 'blake2s-120',\n  0xb250: 'blake2s-128',\n  0xb251: 'blake2s-136',\n  0xb252: 'blake2s-144',\n  0xb253: 'blake2s-152',\n  0xb254: 'blake2s-160',\n  0xb255: 'blake2s-168',\n  0xb256: 'blake2s-176',\n  0xb257: 'blake2s-184',\n  0xb258: 'blake2s-192',\n  0xb259: 'blake2s-200',\n  0xb25a: 'blake2s-208',\n  0xb25b: 'blake2s-216',\n  0xb25c: 'blake2s-224',\n  0xb25d: 'blake2s-232',\n  0xb25e: 'blake2s-240',\n  0xb25f: 'blake2s-248',\n  0xb260: 'blake2s-256',\n\n  // skein\n  0xb301: 'Skein256-8',\n  0xb302: 'Skein256-16',\n  0xb303: 'Skein256-24',\n  0xb304: 'Skein256-32',\n  0xb305: 'Skein256-40',\n  0xb306: 'Skein256-48',\n  0xb307: 'Skein256-56',\n  0xb308: 'Skein256-64',\n  0xb309: 'Skein256-72',\n  0xb30a: 'Skein256-80',\n  0xb30b: 'Skein256-88',\n  0xb30c: 'Skein256-96',\n  0xb30d: 'Skein256-104',\n  0xb30e: 'Skein256-112',\n  0xb30f: 'Skein256-120',\n  0xb310: 'Skein256-128',\n  0xb311: 'Skein256-136',\n  0xb312: 'Skein256-144',\n  0xb313: 'Skein256-152',\n  0xb314: 'Skein256-160',\n  0xb315: 'Skein256-168',\n  0xb316: 'Skein256-176',\n  0xb317: 'Skein256-184',\n  0xb318: 'Skein256-192',\n  0xb319: 'Skein256-200',\n  0xb31a: 'Skein256-208',\n  0xb31b: 'Skein256-216',\n  0xb31c: 'Skein256-224',\n  0xb31d: 'Skein256-232',\n  0xb31e: 'Skein256-240',\n  0xb31f: 'Skein256-248',\n  0xb320: 'Skein256-256',\n  0xb321: 'Skein512-8',\n  0xb322: 'Skein512-16',\n  0xb323: 'Skein512-24',\n  0xb324: 'Skein512-32',\n  0xb325: 'Skein512-40',\n  0xb326: 'Skein512-48',\n  0xb327: 'Skein512-56',\n  0xb328: 'Skein512-64',\n  0xb329: 'Skein512-72',\n  0xb32a: 'Skein512-80',\n  0xb32b: 'Skein512-88',\n  0xb32c: 'Skein512-96',\n  0xb32d: 'Skein512-104',\n  0xb32e: 'Skein512-112',\n  0xb32f: 'Skein512-120',\n  0xb330: 'Skein512-128',\n  0xb331: 'Skein512-136',\n  0xb332: 'Skein512-144',\n  0xb333: 'Skein512-152',\n  0xb334: 'Skein512-160',\n  0xb335: 'Skein512-168',\n  0xb336: 'Skein512-176',\n  0xb337: 'Skein512-184',\n  0xb338: 'Skein512-192',\n  0xb339: 'Skein512-200',\n  0xb33a: 'Skein512-208',\n  0xb33b: 'Skein512-216',\n  0xb33c: 'Skein512-224',\n  0xb33d: 'Skein512-232',\n  0xb33e: 'Skein512-240',\n  0xb33f: 'Skein512-248',\n  0xb340: 'Skein512-256',\n  0xb341: 'Skein512-264',\n  0xb342: 'Skein512-272',\n  0xb343: 'Skein512-280',\n  0xb344: 'Skein512-288',\n  0xb345: 'Skein512-296',\n  0xb346: 'Skein512-304',\n  0xb347: 'Skein512-312',\n  0xb348: 'Skein512-320',\n  0xb349: 'Skein512-328',\n  0xb34a: 'Skein512-336',\n  0xb34b: 'Skein512-344',\n  0xb34c: 'Skein512-352',\n  0xb34d: 'Skein512-360',\n  0xb34e: 'Skein512-368',\n  0xb34f: 'Skein512-376',\n  0xb350: 'Skein512-384',\n  0xb351: 'Skein512-392',\n  0xb352: 'Skein512-400',\n  0xb353: 'Skein512-408',\n  0xb354: 'Skein512-416',\n  0xb355: 'Skein512-424',\n  0xb356: 'Skein512-432',\n  0xb357: 'Skein512-440',\n  0xb358: 'Skein512-448',\n  0xb359: 'Skein512-456',\n  0xb35a: 'Skein512-464',\n  0xb35b: 'Skein512-472',\n  0xb35c: 'Skein512-480',\n  0xb35d: 'Skein512-488',\n  0xb35e: 'Skein512-496',\n  0xb35f: 'Skein512-504',\n  0xb360: 'Skein512-512',\n  0xb361: 'Skein1024-8',\n  0xb362: 'Skein1024-16',\n  0xb363: 'Skein1024-24',\n  0xb364: 'Skein1024-32',\n  0xb365: 'Skein1024-40',\n  0xb366: 'Skein1024-48',\n  0xb367: 'Skein1024-56',\n  0xb368: 'Skein1024-64',\n  0xb369: 'Skein1024-72',\n  0xb36a: 'Skein1024-80',\n  0xb36b: 'Skein1024-88',\n  0xb36c: 'Skein1024-96',\n  0xb36d: 'Skein1024-104',\n  0xb36e: 'Skein1024-112',\n  0xb36f: 'Skein1024-120',\n  0xb370: 'Skein1024-128',\n  0xb371: 'Skein1024-136',\n  0xb372: 'Skein1024-144',\n  0xb373: 'Skein1024-152',\n  0xb374: 'Skein1024-160',\n  0xb375: 'Skein1024-168',\n  0xb376: 'Skein1024-176',\n  0xb377: 'Skein1024-184',\n  0xb378: 'Skein1024-192',\n  0xb379: 'Skein1024-200',\n  0xb37a: 'Skein1024-208',\n  0xb37b: 'Skein1024-216',\n  0xb37c: 'Skein1024-224',\n  0xb37d: 'Skein1024-232',\n  0xb37e: 'Skein1024-240',\n  0xb37f: 'Skein1024-248',\n  0xb380: 'Skein1024-256',\n  0xb381: 'Skein1024-264',\n  0xb382: 'Skein1024-272',\n  0xb383: 'Skein1024-280',\n  0xb384: 'Skein1024-288',\n  0xb385: 'Skein1024-296',\n  0xb386: 'Skein1024-304',\n  0xb387: 'Skein1024-312',\n  0xb388: 'Skein1024-320',\n  0xb389: 'Skein1024-328',\n  0xb38a: 'Skein1024-336',\n  0xb38b: 'Skein1024-344',\n  0xb38c: 'Skein1024-352',\n  0xb38d: 'Skein1024-360',\n  0xb38e: 'Skein1024-368',\n  0xb38f: 'Skein1024-376',\n  0xb390: 'Skein1024-384',\n  0xb391: 'Skein1024-392',\n  0xb392: 'Skein1024-400',\n  0xb393: 'Skein1024-408',\n  0xb394: 'Skein1024-416',\n  0xb395: 'Skein1024-424',\n  0xb396: 'Skein1024-432',\n  0xb397: 'Skein1024-440',\n  0xb398: 'Skein1024-448',\n  0xb399: 'Skein1024-456',\n  0xb39a: 'Skein1024-464',\n  0xb39b: 'Skein1024-472',\n  0xb39c: 'Skein1024-480',\n  0xb39d: 'Skein1024-488',\n  0xb39e: 'Skein1024-496',\n  0xb39f: 'Skein1024-504',\n  0xb3a0: 'Skein1024-512',\n  0xb3a1: 'Skein1024-520',\n  0xb3a2: 'Skein1024-528',\n  0xb3a3: 'Skein1024-536',\n  0xb3a4: 'Skein1024-544',\n  0xb3a5: 'Skein1024-552',\n  0xb3a6: 'Skein1024-560',\n  0xb3a7: 'Skein1024-568',\n  0xb3a8: 'Skein1024-576',\n  0xb3a9: 'Skein1024-584',\n  0xb3aa: 'Skein1024-592',\n  0xb3ab: 'Skein1024-600',\n  0xb3ac: 'Skein1024-608',\n  0xb3ad: 'Skein1024-616',\n  0xb3ae: 'Skein1024-624',\n  0xb3af: 'Skein1024-632',\n  0xb3b0: 'Skein1024-640',\n  0xb3b1: 'Skein1024-648',\n  0xb3b2: 'Skein1024-656',\n  0xb3b3: 'Skein1024-664',\n  0xb3b4: 'Skein1024-672',\n  0xb3b5: 'Skein1024-680',\n  0xb3b6: 'Skein1024-688',\n  0xb3b7: 'Skein1024-696',\n  0xb3b8: 'Skein1024-704',\n  0xb3b9: 'Skein1024-712',\n  0xb3ba: 'Skein1024-720',\n  0xb3bb: 'Skein1024-728',\n  0xb3bc: 'Skein1024-736',\n  0xb3bd: 'Skein1024-744',\n  0xb3be: 'Skein1024-752',\n  0xb3bf: 'Skein1024-760',\n  0xb3c0: 'Skein1024-768',\n  0xb3c1: 'Skein1024-776',\n  0xb3c2: 'Skein1024-784',\n  0xb3c3: 'Skein1024-792',\n  0xb3c4: 'Skein1024-800',\n  0xb3c5: 'Skein1024-808',\n  0xb3c6: 'Skein1024-816',\n  0xb3c7: 'Skein1024-824',\n  0xb3c8: 'Skein1024-832',\n  0xb3c9: 'Skein1024-840',\n  0xb3ca: 'Skein1024-848',\n  0xb3cb: 'Skein1024-856',\n  0xb3cc: 'Skein1024-864',\n  0xb3cd: 'Skein1024-872',\n  0xb3ce: 'Skein1024-880',\n  0xb3cf: 'Skein1024-888',\n  0xb3d0: 'Skein1024-896',\n  0xb3d1: 'Skein1024-904',\n  0xb3d2: 'Skein1024-912',\n  0xb3d3: 'Skein1024-920',\n  0xb3d4: 'Skein1024-928',\n  0xb3d5: 'Skein1024-936',\n  0xb3d6: 'Skein1024-944',\n  0xb3d7: 'Skein1024-952',\n  0xb3d8: 'Skein1024-960',\n  0xb3d9: 'Skein1024-968',\n  0xb3da: 'Skein1024-976',\n  0xb3db: 'Skein1024-984',\n  0xb3dc: 'Skein1024-992',\n  0xb3dd: 'Skein1024-1000',\n  0xb3de: 'Skein1024-1008',\n  0xb3df: 'Skein1024-1016',\n  0xb3e0: 'Skein1024-1024'\n})\n\nexports.defaultLengths = Object.freeze({\n  0x11: 20,\n  0x12: 32,\n  0x13: 64,\n  0x56: 32,\n  0x17: 28,\n  0x16: 32,\n  0x15: 48,\n  0x14: 64,\n  0x18: 32,\n  0x19: 64,\n  0x1A: 28,\n  0x1B: 32,\n  0x1C: 48,\n  0x1D: 64,\n  0x22: 32,\n\n  0xb201: 0x01,\n  0xb202: 0x02,\n  0xb203: 0x03,\n  0xb204: 0x04,\n  0xb205: 0x05,\n  0xb206: 0x06,\n  0xb207: 0x07,\n  0xb208: 0x08,\n  0xb209: 0x09,\n  0xb20a: 0x0a,\n  0xb20b: 0x0b,\n  0xb20c: 0x0c,\n  0xb20d: 0x0d,\n  0xb20e: 0x0e,\n  0xb20f: 0x0f,\n  0xb210: 0x10,\n  0xb211: 0x11,\n  0xb212: 0x12,\n  0xb213: 0x13,\n  0xb214: 0x14,\n  0xb215: 0x15,\n  0xb216: 0x16,\n  0xb217: 0x17,\n  0xb218: 0x18,\n  0xb219: 0x19,\n  0xb21a: 0x1a,\n  0xb21b: 0x1b,\n  0xb21c: 0x1c,\n  0xb21d: 0x1d,\n  0xb21e: 0x1e,\n  0xb21f: 0x1f,\n  0xb220: 0x20,\n  0xb221: 0x21,\n  0xb222: 0x22,\n  0xb223: 0x23,\n  0xb224: 0x24,\n  0xb225: 0x25,\n  0xb226: 0x26,\n  0xb227: 0x27,\n  0xb228: 0x28,\n  0xb229: 0x29,\n  0xb22a: 0x2a,\n  0xb22b: 0x2b,\n  0xb22c: 0x2c,\n  0xb22d: 0x2d,\n  0xb22e: 0x2e,\n  0xb22f: 0x2f,\n  0xb230: 0x30,\n  0xb231: 0x31,\n  0xb232: 0x32,\n  0xb233: 0x33,\n  0xb234: 0x34,\n  0xb235: 0x35,\n  0xb236: 0x36,\n  0xb237: 0x37,\n  0xb238: 0x38,\n  0xb239: 0x39,\n  0xb23a: 0x3a,\n  0xb23b: 0x3b,\n  0xb23c: 0x3c,\n  0xb23d: 0x3d,\n  0xb23e: 0x3e,\n  0xb23f: 0x3f,\n  0xb240: 0x40,\n  0xb241: 0x01,\n  0xb242: 0x02,\n  0xb243: 0x03,\n  0xb244: 0x04,\n  0xb245: 0x05,\n  0xb246: 0x06,\n  0xb247: 0x07,\n  0xb248: 0x08,\n  0xb249: 0x09,\n  0xb24a: 0x0a,\n  0xb24b: 0x0b,\n  0xb24c: 0x0c,\n  0xb24d: 0x0d,\n  0xb24e: 0x0e,\n  0xb24f: 0x0f,\n  0xb250: 0x10,\n  0xb251: 0x11,\n  0xb252: 0x12,\n  0xb253: 0x13,\n  0xb254: 0x14,\n  0xb255: 0x15,\n  0xb256: 0x16,\n  0xb257: 0x17,\n  0xb258: 0x18,\n  0xb259: 0x19,\n  0xb25a: 0x1a,\n  0xb25b: 0x1b,\n  0xb25c: 0x1c,\n  0xb25d: 0x1d,\n  0xb25e: 0x1e,\n  0xb25f: 0x1f,\n  0xb260: 0x20,\n  0xb301: 0x01,\n  0xb302: 0x02,\n  0xb303: 0x03,\n  0xb304: 0x04,\n  0xb305: 0x05,\n  0xb306: 0x06,\n  0xb307: 0x07,\n  0xb308: 0x08,\n  0xb309: 0x09,\n  0xb30a: 0x0a,\n  0xb30b: 0x0b,\n  0xb30c: 0x0c,\n  0xb30d: 0x0d,\n  0xb30e: 0x0e,\n  0xb30f: 0x0f,\n  0xb310: 0x10,\n  0xb311: 0x11,\n  0xb312: 0x12,\n  0xb313: 0x13,\n  0xb314: 0x14,\n  0xb315: 0x15,\n  0xb316: 0x16,\n  0xb317: 0x17,\n  0xb318: 0x18,\n  0xb319: 0x19,\n  0xb31a: 0x1a,\n  0xb31b: 0x1b,\n  0xb31c: 0x1c,\n  0xb31d: 0x1d,\n  0xb31e: 0x1e,\n  0xb31f: 0x1f,\n  0xb320: 0x20,\n  0xb321: 0x01,\n  0xb322: 0x02,\n  0xb323: 0x03,\n  0xb324: 0x04,\n  0xb325: 0x05,\n  0xb326: 0x06,\n  0xb327: 0x07,\n  0xb328: 0x08,\n  0xb329: 0x09,\n  0xb32a: 0x0a,\n  0xb32b: 0x0b,\n  0xb32c: 0x0c,\n  0xb32d: 0x0d,\n  0xb32e: 0x0e,\n  0xb32f: 0x0f,\n  0xb330: 0x10,\n  0xb331: 0x11,\n  0xb332: 0x12,\n  0xb333: 0x13,\n  0xb334: 0x14,\n  0xb335: 0x15,\n  0xb336: 0x16,\n  0xb337: 0x17,\n  0xb338: 0x18,\n  0xb339: 0x19,\n  0xb33a: 0x1a,\n  0xb33b: 0x1b,\n  0xb33c: 0x1c,\n  0xb33d: 0x1d,\n  0xb33e: 0x1e,\n  0xb33f: 0x1f,\n  0xb340: 0x20,\n  0xb341: 0x21,\n  0xb342: 0x22,\n  0xb343: 0x23,\n  0xb344: 0x24,\n  0xb345: 0x25,\n  0xb346: 0x26,\n  0xb347: 0x27,\n  0xb348: 0x28,\n  0xb349: 0x29,\n  0xb34a: 0x2a,\n  0xb34b: 0x2b,\n  0xb34c: 0x2c,\n  0xb34d: 0x2d,\n  0xb34e: 0x2e,\n  0xb34f: 0x2f,\n  0xb350: 0x30,\n  0xb351: 0x31,\n  0xb352: 0x32,\n  0xb353: 0x33,\n  0xb354: 0x34,\n  0xb355: 0x35,\n  0xb356: 0x36,\n  0xb357: 0x37,\n  0xb358: 0x38,\n  0xb359: 0x39,\n  0xb35a: 0x3a,\n  0xb35b: 0x3b,\n  0xb35c: 0x3c,\n  0xb35d: 0x3d,\n  0xb35e: 0x3e,\n  0xb35f: 0x3f,\n  0xb360: 0x40,\n  0xb361: 0x01,\n  0xb362: 0x02,\n  0xb363: 0x03,\n  0xb364: 0x04,\n  0xb365: 0x05,\n  0xb366: 0x06,\n  0xb367: 0x07,\n  0xb368: 0x08,\n  0xb369: 0x09,\n  0xb36a: 0x0a,\n  0xb36b: 0x0b,\n  0xb36c: 0x0c,\n  0xb36d: 0x0d,\n  0xb36e: 0x0e,\n  0xb36f: 0x0f,\n  0xb370: 0x10,\n  0xb371: 0x11,\n  0xb372: 0x12,\n  0xb373: 0x13,\n  0xb374: 0x14,\n  0xb375: 0x15,\n  0xb376: 0x16,\n  0xb377: 0x17,\n  0xb378: 0x18,\n  0xb379: 0x19,\n  0xb37a: 0x1a,\n  0xb37b: 0x1b,\n  0xb37c: 0x1c,\n  0xb37d: 0x1d,\n  0xb37e: 0x1e,\n  0xb37f: 0x1f,\n  0xb380: 0x20,\n  0xb381: 0x21,\n  0xb382: 0x22,\n  0xb383: 0x23,\n  0xb384: 0x24,\n  0xb385: 0x25,\n  0xb386: 0x26,\n  0xb387: 0x27,\n  0xb388: 0x28,\n  0xb389: 0x29,\n  0xb38a: 0x2a,\n  0xb38b: 0x2b,\n  0xb38c: 0x2c,\n  0xb38d: 0x2d,\n  0xb38e: 0x2e,\n  0xb38f: 0x2f,\n  0xb390: 0x30,\n  0xb391: 0x31,\n  0xb392: 0x32,\n  0xb393: 0x33,\n  0xb394: 0x34,\n  0xb395: 0x35,\n  0xb396: 0x36,\n  0xb397: 0x37,\n  0xb398: 0x38,\n  0xb399: 0x39,\n  0xb39a: 0x3a,\n  0xb39b: 0x3b,\n  0xb39c: 0x3c,\n  0xb39d: 0x3d,\n  0xb39e: 0x3e,\n  0xb39f: 0x3f,\n  0xb3a0: 0x40,\n  0xb3a1: 0x41,\n  0xb3a2: 0x42,\n  0xb3a3: 0x43,\n  0xb3a4: 0x44,\n  0xb3a5: 0x45,\n  0xb3a6: 0x46,\n  0xb3a7: 0x47,\n  0xb3a8: 0x48,\n  0xb3a9: 0x49,\n  0xb3aa: 0x4a,\n  0xb3ab: 0x4b,\n  0xb3ac: 0x4c,\n  0xb3ad: 0x4d,\n  0xb3ae: 0x4e,\n  0xb3af: 0x4f,\n  0xb3b0: 0x50,\n  0xb3b1: 0x51,\n  0xb3b2: 0x52,\n  0xb3b3: 0x53,\n  0xb3b4: 0x54,\n  0xb3b5: 0x55,\n  0xb3b6: 0x56,\n  0xb3b7: 0x57,\n  0xb3b8: 0x58,\n  0xb3b9: 0x59,\n  0xb3ba: 0x5a,\n  0xb3bb: 0x5b,\n  0xb3bc: 0x5c,\n  0xb3bd: 0x5d,\n  0xb3be: 0x5e,\n  0xb3bf: 0x5f,\n  0xb3c0: 0x60,\n  0xb3c1: 0x61,\n  0xb3c2: 0x62,\n  0xb3c3: 0x63,\n  0xb3c4: 0x64,\n  0xb3c5: 0x65,\n  0xb3c6: 0x66,\n  0xb3c7: 0x67,\n  0xb3c8: 0x68,\n  0xb3c9: 0x69,\n  0xb3ca: 0x6a,\n  0xb3cb: 0x6b,\n  0xb3cc: 0x6c,\n  0xb3cd: 0x6d,\n  0xb3ce: 0x6e,\n  0xb3cf: 0x6f,\n  0xb3d0: 0x70,\n  0xb3d1: 0x71,\n  0xb3d2: 0x72,\n  0xb3d3: 0x73,\n  0xb3d4: 0x74,\n  0xb3d5: 0x75,\n  0xb3d6: 0x76,\n  0xb3d7: 0x77,\n  0xb3d8: 0x78,\n  0xb3d9: 0x79,\n  0xb3da: 0x7a,\n  0xb3db: 0x7b,\n  0xb3dc: 0x7c,\n  0xb3dd: 0x7d,\n  0xb3de: 0x7e,\n  0xb3df: 0x7f,\n  0xb3e0: 0x80\n})\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n","exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n","var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n","const { KeyManager,\n\tderiveSeedFrom }\t\t= require(\"@holo-host/wasm-key-manager\");\nconst blake\t\t\t\t= require(\"blakejs\");\nconst multihash\t\t\t\t= require(\"multihashes\");\nconst SerializeJSON\t\t\t\t= require(\"json-stable-stringify\");\nconst base36\t\t\t\t= require(\"base-x\")(\"0123456789abcdefghijklmnopqrstuvwxyz\");\n\nconst HOLO_HASH_AGENT_PREFIX\t\t= Buffer.from(new Uint8Array([0x84, 0x20, 0x24]).buffer);\nconst HOLO_HASH_HEADER_PREFIX\t\t= Buffer.from(new Uint8Array([0x84, 0x29, 0x24]).buffer);\nconst HOLO_HASH_ENTRY_PREFIX\t\t= Buffer.from(new Uint8Array([0x84, 0x21, 0x24]).buffer);\nconst HOLO_HASH_DNA_PREFIX\t\t    = Buffer.from(new Uint8Array([0x84, 0x2d, 0x24]).buffer);\n\nconst getHoloHashPrefix = holoHashType => {\n\tlet holoHashPrefix;\n\tswitch (holoHashType) {\n\t\tcase \"agent\":\n\t\t\tholoHashPrefix = HOLO_HASH_AGENT_PREFIX;\n\t\t\tbreak;\n\t\tcase \"header\":\n\t\t\tholoHashPrefix = HOLO_HASH_HEADER_PREFIX;\n\t\t\tbreak;\n\t\tcase \"entry\":\n\t\t\tholoHashPrefix = HOLO_HASH_ENTRY_PREFIX;\n\t\t\tbreak;\n\t\tcase \"dna\":\n\t\t\tholoHashPrefix = HOLO_HASH_DNA_PREFIX;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error(\"Received unsupported HoloHash Type in Codec.Digest : \", holoHashType);\n\t}\n\treturn holoHashPrefix;\n}\n\nfunction check_length (buf, expectedLength) {\n\tif (Buffer.byteLength(buf) !== expectedLength)\n\t\tthrow new Error(`Unexpected buffer length of ${Buffer.byteLength(buf)}.  Buffer should be ${expectedLength} bytes.`);\n\treturn buf;\n}\n\nfunction convert_b64_to_holohash_b64 (rawBase64) {\n\tlet holoHashbase64 = '';\n\tconst len = rawBase64.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tlet char = rawBase64[i];\n\t\tif (char === '/') {\n\t\t\tchar = '_'\n\t\t} else if (char === '+') {\n\t\t\tchar = '-'\n\t\t}\n\t\tholoHashbase64 += char;\n\t}\n\treturn holoHashbase64;\n}\n\n// Generate holohash 4 byte (or u32) dht \"location\" - used for checksum and dht sharding\nfunction calc_dht_bytes ( data ) {\n\tconst digest\t\t\t\t= blake.blake2b( data, null, 16 );\n\tconst dht_part\t\t\t= Buffer.from([digest[0], digest[1], digest[2], digest[3]])\n\n\tfor (let i of [4, 8, 12]) {\n\t\tdht_part[0] ^= digest[i];\n\t\tdht_part[1] ^= digest[i + 1];\n\t\tdht_part[2] ^= digest[i + 2];\n\t\tdht_part[3] ^= digest[i + 3];\n\t}\n\n\treturn dht_part;\n}\n\nconst Codec = {\n\t\"AgentId\": {\n\t\tdecode: (base64) => Codec.HoloHash.decode(base64),\n\t\tencode: (buf) =>  Codec.HoloHash.encode(\"agent\", Buffer.from(buf)),\n\t\tdecodeToHoloHash:(base64) => {\n\t\t\tconst buf = Buffer.from(base64.slice(1), \"base64\");\n\t\t\tcheck_length(Buffer.from(buf), 39);\n\t\t\treturn buf;\n\t\t},\n\t},\n\t\"Base36\": {\n\t\tdecode: (str) => base36.decode(str),\n\t\tencode: (buf) => base36.encode(Buffer.from(buf)),\n\t},\n\t\"HoloHash\": {\n\t\tholoHashStringFromB64: (base64) => convert_b64_to_holohash_b64(base64),\n\t\tholoHashFromBuffer: (holoHashType, buf) => {\n\t\t\tconst holoHashPrefix = getHoloHashPrefix(holoHashType);\n\t\t\tcheck_length(Buffer.from(buf), 32);\n\t\t\treturn Buffer.concat([\n\t\t\t\tholoHashPrefix,\n\t\t\t\tbuf,\n\t\t\t\tcalc_dht_bytes(buf)\n\t\t\t]);\n\t\t},\n\t\tencode: (holoHashType, buf) => {\n\t\t\tif (typeof holoHashType !== 'string'){\n\t\t\t\tthrow new Error('First argument must be a string declaring the type of HoloHash to be encoded. Accepted HoloHash types are: header, entry, dna, and agent.')\n\t\t\t}\n\t\t\tif (Buffer.byteLength(buf) === 39) {\n\t\t\t\tconst compareBuf = Buffer.alloc(3);\n\t\t\t\tbuf.copy(compareBuf, 0, 0, 3);\n\t\t\t\tconst holoHashPrefix = getHoloHashPrefix(holoHashType.toLowerCase());\n\t\t\t\tif (Buffer.compare(compareBuf, holoHashPrefix) === 0) {\n\t\t\t\t\t// encoding from holohash buffer\n\t\t\t\t\treturn \"u\" + Codec.HoloHash.holoHashStringFromB64(Buffer.from(buf).toString(\"base64\"));\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`Unexpected buffer length of ${Buffer.byteLength(buf)}.  Buffer should be 32 bytes.`);\n\t\t\t\t}\n\t\t\t} \n\t\t\t// encoding from raw buffer\n\t\t\tconst rawBase64 = Codec.HoloHash.holoHashFromBuffer(holoHashType.toLowerCase(), Buffer.from(buf)).toString(\"base64\");\n\t\t\treturn \"u\" + Codec.HoloHash.holoHashStringFromB64(rawBase64);\n\t\t},\n\t\tdecode: (base64) => {\n\t\t\tconst buf = Buffer.from(base64.slice(1), \"base64\").slice(3,-4);\n\t\t\tcheck_length(Buffer.from(buf), 32);\n\t\t\treturn buf;\n\t\t},\n\t},\n\t\"Signature\": {\n\t\tdecode: (base64) => Buffer.from(base64, \"base64\"),\n\t\tencode: (buf) => Buffer.from(buf).toString(\"base64\"),\n\t},\n\t\"Digest\": {\n\t\tdecode: (base64) => multihash.decode(Buffer.from(base64, \"base64\")).digest,\n\t\tencode: (data) => {\n\t\t\tlet buf = data;\n\t\t\tif(!Buffer.isBuffer(data) ) {\n\t\t\t\tbuf = Buffer.from( typeof data === \"string\" ? data : SerializeJSON( data ) );\n\t\t\t}\n\t\t\treturn Buffer.from(multihash.encode(buf, \"sha2-256\")).toString(\"base64\");\n\t\t},\n\t},\n};\n\nmodule.exports = {\n    KeyManager,\n    deriveSeedFrom,\n    Codec,\n};\n"],"sourceRoot":""}